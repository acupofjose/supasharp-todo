@using SupasharpTodo.Shared.Interfaces
@using System.ComponentModel
@using Microsoft.AspNetCore.Components.Web
@inject IAppStateService AppState
@inject Supabase.Client Supabase
@implements IDisposable

<div class="navbar bg-base-100">
    @if (AppState.IsLoggedIn)
    {
        <div class="w-12">
            <label for="drawer" class="btn btn-ghost btn-small drawer-button md:hidden">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 9h16.5m-16.5 6.75h16.5"/>
                </svg>
            </label>
        </div>
    }
    <div class="flex-1">
        <a class="btn btn-ghost normal-case text-xl">Supa#Todos</a>
    </div>
    @if (AppState.IsLoggedIn)
    {
        <div class="flex-1 gap-2 justify-end">
            <div class="dropdown dropdown-end">
                <label tabindex="0" class="btn btn-ghost btn-circle avatar">
                    <div class="w-10 border-2 border-slate-500 rounded-full hover:border-accent transition ease-in-out">
                        @if (!string.IsNullOrEmpty(AppState.AvatarUrl))
                        {
                            <img src="@AppState.AvatarUrl" class="w-6 h-6"/>
                        }
                        else
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="p-[2px]">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 6a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0zM4.501 20.118a7.5 7.5 0 0114.998 0A17.933 17.933 0 0112 21.75c-2.676 0-5.216-.584-7.499-1.632z"/>
                            </svg>
                        }
                    </div>
                </label>
                <ul tabindex="0" class="mt-3 z-10 p-2 menu menu-sm dropdown-content bg-slate-500 rounded-box w-52 shadow-lg prose-a:text-white">
                    <li>
                        <a @onclick="HandleLogout">Logout</a>
                    </li>
                </ul>
            </div>
        </div>
    }
</div>

@code {

    protected override void OnInitialized()
    {
        AppState.PropertyChanged += AppStateOnPropertyChanged;
    }

    public void Dispose()
    {
        AppState.PropertyChanged -= AppStateOnPropertyChanged;
    }

    private void AppStateOnPropertyChanged(object? sender, PropertyChangedEventArgs e)
    {
        if (e.PropertyName == nameof(AppState.IsLoggedIn))
            StateHasChanged();
    }

    private void HandleLogout() =>
        Supabase.Auth.SignOut();
}